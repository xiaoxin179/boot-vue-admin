<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间就是mapper接口的路径，resultType就是所涉及到的实体类的路径,对于结果集的解释，因为查询之后须要返回的是一个对象，所以需要告诉mybatis放回的结果集是什么,也就是结果集，就是这个查询最后返回的数据类新-->
<mapper namespace="com.xiaoxin.mapper.UserMapper">
<!--    返回值为bool，所以不需要返回-->
    <insert id="save" >
        insert into user ( username, password, name, age, birth, account, email, role, phone) values(#{username},#{password},#{name},#{age},#{birth},#{account},#{email},#{role},#{phone})
    </insert>
    <insert id="insert">
        insert into user ( username, password, name, age, birth, account, email, role, phone) values(#{username},#{password},#{name},#{age},#{birth},#{account},#{email},#{role},#{phone})
    </insert>
    <update id="update">
        update user
        <set>
            <if test="username!=null and username!=''">
                username=#{username}
            </if>
            <if test="name!=null and name!=''">
                `name`=#{name}
            </if>
            <if test="age!=null and age!=''">
                age=#{age}
            </if>
            <if test="birth!=null">
                birth=#{birth}
            </if>
            <if test="account!=null and account!=''">
                account=#{account}
            </if>
            <if test="email!=null and email!=''">
                email=#{email}
            </if>
            <if test="role!=null and role!=''">
                role=#{role}
            </if>
            <if test="phone!=null and phone!=''">
                phone=#{phone}
            </if>
        </set>
        where id=#{id}
    </update>
    <delete id="deleteById">
        delete from user
        where id=#{id}
    </delete>
    <select id="selectUser" resultType="com.xiaoxin.entity.User">
        select id,username,password from user where username=#{username} and password=#{password} ;
    </select>
    <select id="selectUserByUsername" resultType="com.xiaoxin.entity.User">
        select * from user where username=#{username}
    </select>
    <select id="getAllUsers" resultType="com.xiaoxin.entity.User">
        select * from user
        <where>
            <if test="name!=null and name!=''">
                name like concat('%',#{name},'%')
            </if>
            <if test="phone!=null and phone!=''">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="email!=null and email!=''">
                and email like concat('%',#{email},'%')
            </if>
</where>
    </select>
</mapper>